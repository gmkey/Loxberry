#!/usr/bin/perl

# Copyright 2016-2018 Michael Schlenstedt, michael@loxberry.de
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

##########################################################################
# Modules
##########################################################################

use LoxBerry::System;
use LoxBerry::JSON;
use Net::Ping;
use warnings;
use strict;

##########################################################################
# Read Settings
##########################################################################

# Version of this script
my $version = "2.0.0.1";

my $cfgfile = "$lbsconfigdir/general.json";
my $jsonobj = LoxBerry::JSON->new();
my $cfg = $jsonobj->open(filename => $cfgfile);

my %SL = LoxBerry::System::readlanguage();

my $resp;

##########################################################################
# Main program
##########################################################################

# Clear expired key
if (-e "$lbhomedir/system/supportvpn/loxberry.crt" ) {

	my $certdate = `openssl x509 -noout -text -in $lbhomedir/system/supportvpn/loxberry.crt | grep "Not After" | cut -d: -f2-10 | cut -d" " -f2-10`;
	chomp ($certdate);
	my $certepoche = `date --date '$certdate' +%s`;
	chomp ($certepoche);
	my $nowepoche = `date +%s`;
	if ($nowepoche > $certepoche) {

		# Kill an existing connection
		my $supportkey = `openssl x509 -noout -text -in $lbhomedir/system/supportvpn/loxberry.crt | grep "Subject: CN" | cut -d= -f2 | cut -d" " -f2`;
		chomp ($supportkey);
		if (-e "$lbhomedir/log/system_tmpfs/openvpn_$supportkey.pid") {
			my $pid = `cat $lbhomedir/log/system_tmpfs/openvpn_$supportkey.pid`;
			chomp ($pid);
			$resp = `kill $pid`;
			$resp = `$lbhomedir/sbin/openvpn stop 2>&1`; # No need for sudo here - we are root
		}

		notify( "remote", "supportkey", $SL{'REMOTE.LABEL_SUPPORTKEY'} . " " . $supportkey . " - " . $SL{'REMOTE.MSGERROR_KEY_EXPIRED'}, 1);
		$resp = `rm -rf /$lbhomedir/system/supportvpn/* 2>&1`;
	}

}

if ( is_enabled($cfg->{Remote}->{Autoconnect}) && -e "$lbhomedir/system/supportvpn/loxberry.cfg" && -e "$lbhomedir/system/supportvpn/loxberry.crt" ) {

	# Check Online Status
	my $p = Net::Ping->new();
	my $hostname = '10.98.98.1';
	my ($ret, $duration, $ip) = $p->ping($hostname);
	# If not already connected
	if (!$ret) {
		my $supportkey = `openssl x509 -noout -text -in $lbhomedir/system/supportvpn/loxberry.crt | grep "Subject: CN" | cut -d= -f2 | cut -d" " -f2`;
		chomp ($supportkey);
		# Kill an existing connection
		if (-e "$lbhomedir/log/system_tmpfs/openvpn_$supportkey.pid") {
			my $pid = `cat $lbhomedir/log/system_tmpfs/openvpn_$supportkey.pid`;
			chomp ($pid);
			$resp = `kill $pid`;
			$resp = `$lbhomedir/sbin/openvpn stop 2>&1`; # No need for sudo here - we are root
		}
		$resp = `$lbhomedir/sbin/openvpn start 2>&1`; # No need for sudo here - we are root
		$resp = `sudo -n -u loxberry openvpn --daemon --cd $lbhomedir/system/supportvpn --writepid $lbhomedir/log/system_tmpfs/openvpn_$supportkey.pid --log $lbhomedir/log/system_tmpfs/openvpn.log --config $lbhomedir/system/supportvpn/loxberry.cfg 2>&1`;
	}

} else {

	$resp = `$lbhomedir/sbin/openvpn stop 2>&1`; # No need for sudo here - we are root

}

exit;
